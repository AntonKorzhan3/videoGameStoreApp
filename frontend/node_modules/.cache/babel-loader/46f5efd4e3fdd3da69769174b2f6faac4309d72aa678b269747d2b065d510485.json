{"ast":null,"code":"var _jsxFileName = \"C:\\\\Ruby32-x64\\\\bin\\\\videoGameStoreApp\\\\frontend\\\\src\\\\components\\\\NewVideoGames.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport FormBody from \"./VideoGameForm\";\nimport { createVideoGame } from \"../lib/api/videoGames\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewVideoGame() {\n  _s();\n  // State to hold the actor's data\n  const [value, setValue] = useState({});\n  // React Router hook for navigation\n  const navigate = useNavigate();\n\n  // Function to handle changes in input fields\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    // Update the state with the new value for the corresponding input field\n    setValue(prevValue => ({\n      ...prevValue,\n      [name]: value\n    }));\n  };\n\n  // Function to handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Create a new actor using the provided data\n      await createVideoGame(value);\n      // Navigate back to the main list after successful submission\n      navigate(\"/\");\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"NEW\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormBody, {\n      handleChange: handleChange,\n      handleSubmit: handleSubmit,\n      value: value,\n      buttonType: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(NewVideoGame, \"8eZ/LbXuqF+VUxumoUWnUgT4aM8=\", false, function () {\n  return [useNavigate];\n});\n_c = NewVideoGame;\nexport default NewVideoGame;\nvar _c;\n$RefreshReg$(_c, \"NewVideoGame\");","map":{"version":3,"names":["useState","FormBody","createVideoGame","useNavigate","jsxDEV","_jsxDEV","NewVideoGame","_s","value","setValue","navigate","handleChange","e","name","target","prevValue","handleSubmit","preventDefault","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","buttonType","_c","$RefreshReg$"],"sources":["C:/Ruby32-x64/bin/videoGameStoreApp/frontend/src/components/NewVideoGames.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport FormBody from \"./VideoGameForm\";\r\nimport { createVideoGame } from \"../lib/api/videoGames\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction NewVideoGame() {\r\n  // State to hold the actor's data\r\n  const [value, setValue] = useState({});\r\n  // React Router hook for navigation\r\n  const navigate = useNavigate();\r\n\r\n  // Function to handle changes in input fields\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    // Update the state with the new value for the corresponding input field\r\n    setValue((prevValue) => ({\r\n      ...prevValue,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  // Function to handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      // Create a new actor using the provided data\r\n      await createVideoGame(value);\r\n      // Navigate back to the main list after successful submission\r\n      navigate(\"/\");\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>NEW</h1>\r\n      {/* Render the form component with appropriate props */}\r\n      <FormBody\r\n        handleChange={handleChange}\r\n        handleSubmit={handleSubmit}\r\n        value={value}\r\n        buttonType=\"Add\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewVideoGame;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,QAAQ,MAAM,iBAAiB;AACtC,SAASC,eAAe,QAAQ,uBAAuB;AACvD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtC;EACA,MAAMU,QAAQ,GAAGP,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMQ,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEL;IAAM,CAAC,GAAGI,CAAC,CAACE,MAAM;IAChC;IACAL,QAAQ,CAAEM,SAAS,KAAM;MACvB,GAAGA,SAAS;MACZ,CAACF,IAAI,GAAGL;IACV,CAAC,CAAC,CAAC;EACL,CAAC;;EAED;EACA,MAAMQ,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAChCA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB,IAAI;MACF;MACA,MAAMf,eAAe,CAACM,KAAK,CAAC;MAC5B;MACAE,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,oBACEb,OAAA;IAAKe,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBhB,OAAA;MAAAgB,QAAA,EAAI;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEZpB,OAAA,CAACJ,QAAQ;MACPU,YAAY,EAAEA,YAAa;MAC3BK,YAAY,EAAEA,YAAa;MAC3BR,KAAK,EAAEA,KAAM;MACbkB,UAAU,EAAC;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAClB,EAAA,CAzCQD,YAAY;EAAA,QAIFH,WAAW;AAAA;AAAAwB,EAAA,GAJrBrB,YAAY;AA2CrB,eAAeA,YAAY;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}